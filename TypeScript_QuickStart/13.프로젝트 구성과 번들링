📌 프로젝트 구성과 번들링. 


💡 Typescript 프로젝트의 번들링
번들링(bundling)은 여러 리소스(파일)을 합치는 과정을 말한다. 
(타입스크립트 컴파일러를 이용해 여러 타입스크립트 파일을 하나로 번들링하려면 --out 옵션을 이용할 수 있다.
그러나 이 옵셥은 타입스크립트의 번들링만 고려할 수 있기 때문에 기능상의 한계가 있다. )
이러한 문제점을 극복하기 위해 웹팩과 같은 번들러를 이용할수 있다.
(웹팩은 개별 파일에서 호출한 모듈을 적절한 순서로 배치하고 흩어져 있는 라이브러리와 사용자 코드를 합쳐 최적화된 배포 파일로 생성해 낸다.)


    1) 웹팩을 이용한 번들링. 
        🔧 npm install -g webpack@3.11.0

        🔧 webpack entry1.js build1.js         //entry1.js를 -> build1.js 파일로 번들링하는 코드 

    2) 웹팩 설정 파일을 이용한 번들링. 
        🔧 웹 팩 실행 명령어를 package.json에 명령어를 등록해 두기. 


    
💡 jQuery 기반 프로젝트의 구성과 실습. 
    "jQuery는 HTML의 클라이언트 렌더링을 쉽고 빠르게 수행할 수 있도록 설계된 JS 라이브러리이다.
    (jQuery는 가벼운 라이브러리지만 DOM 제어, HTTP 통신과 같은 웹 개발에 필요한 주요 특징들을 포함하기 떄문에 jQuery를 메인 라이브러리로 두고 개발할 수 있다.)


    - app.ts : 웹 페이지 호출 뒤 실행되는 메인 함수 위치
    - index.html 애플리케이션을 실행한 시작 페이지
    - list.ts : 목록 출력과 관련한 로직을 처리하는 외부 모듈


💡 Angular JS 기반 프로젝트의 구성과 실습. 
    : AngularJS 는 구글이 만든 MVC 프레임워크이다. 
    
    앞에서 진행한 jQuery 프로젝트와 크게 다르지 않다. 프로젝트 설정 과정이 반복적일 수 있지만, 
    타입스크립트를 이용해 프로젝트를 설정하는 과정이 어렵지 않다는 것을 보이기 위해 응용 사례를 반복해서 보이고자 한다.

    - tsconfig.json 설정
    - package.json 설정
    - AngularJS 소스코드 작성. 

    1) tsconfig.json 파일은 tsc --init 명령으로 기본 파일을 생성한다. 
    tsconfig.json 파일은 디폴트 설정을 이용해 컴파일하고, 모듈이 설치되는 node_modules 디렉터리와 컴파일 결과가 저장되는 dist 디렉터리는 컴파일 때 제외해야
    하므로 exclude에 해당하는 디렉터리를 추가했다.