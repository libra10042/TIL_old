/* 해시 테이블 : 고정된 크기의 자료 구조로 처음에 크기가 정해진다. 
 자바스크립트에서 자바스크립트 객체는 해시 테이블과 같은 방식으로 키와 해당 키의 연관된 값을 정의하는 방식으로 동작한다.

 - put() : 자료 저장하는데 사용. 
 - get() : 자료 얻는데 사용. 

 좋은 해싱 함수가 되기 위한 3가지 요구사항. 
 1) 결정성 : 동일한 키는 동일한 해시 값을 생성해야 한다.
 2) 효율성 : 시간 복잡도가 O(1) 이어야 한다.
 3) 균일한 분배 : 배열 전체를 최대한 활용해야 한다. 

 */ 

 // 탐사 
 /*
 충돌이 발생하는 것을 피하기 위해 탐사 해싱 기법을 사용해 배열에서 다음으로 사용 가능한 인덱스를 찾을 수 있다.

 1) 선형 탐사 
 : 한 번에 한 인덱스를 증가시킴으로써 사용 가능한 인덱스를 찾는다.
  단점 : 군집이 쉽게 발생한다.


2) 이차 탐사 
 : 군집 문제를 해결하는데 좋은 기법이다. 매번 1씩 증가시키는 대신 완전 제곱을 사용한다.
 
 
 재해싱/ 이중 해싱 의 3가지 요구사항. 
 1) 달라야 함 : 두 번쨰 해싱 함수가 키를 더 잘 분배하기 위해서는 첫 번째 해싱 함수와 달라야 한다.
 2) 효율적이어야 함 : 두 번째 해싱 함수의 시간 복잡도가 여전히 O(1)이어야 한다.
 3) 0이 아니어야 함 : 두 번째 해싱 함수의 결과가 0이 돼서는 안된다.0은 초기 해시 값을 결과로 내기 때문이다. 
 
 */

 