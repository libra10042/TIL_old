📌애플리케이션을 개발할 때 필요한 서드 파티 라이브러리와 설치와 사용법.

"자바스크립트 프로젝트의 대부분은 라이브러리 형태로 공개돼 있다. 
라이브러리는 제 3자에 해당하는 수많은 업체와 개발자에 의해 개발되므로 서드 파티 라이브러리라 불린다."

"대표적인 서드 파티 라이브버리는 jQuery, AngularJS 등이 있다."


💡타입 정의 파일에 대한 저장소
: 자바스크립트 라이브러리가 타입스크립트 프로젝트에서는 인식하기가 어려우므로 타입 정의 파일이라는 중간 매개 파일이 필요하다.


🔧 라이브러리와 타입 정의 파일 설치 
1) 타이핑을 이용한 타입 정의 파일 설치 (1.x 설치)

    🔧 tsc --init             //tsconfig.json
    🔧 npm init               //npm init
    🔧 npm install --save underscore@1.8.3          // 언더스코어 라이브러리 : 함수형 프로그래밍 기반으로 컬렉션 처리에 유용한 함수나 유틸리티 등을 제공. 

    🔧 npm install -g typings           // 타이핑을 설치할 때는 -g 플래그를 주어 전역에 설치하는 것이 좋다 

    🔧typings search underscore        // typings 명령어를 입력하면 관련 타입 정의 파일에 대한 검색 결과 표시.
    🔧typings install dt~underscore --global --save


 2) 패키지로 내려바아 타입 정의 파일 설치.
 타입스크립트 2.x에 오면서 타입 정의 파일을 typings 명령어로 가져오지 않고 패키지로 직접 가져올 수 있게 되었다.

 패키지명 앞에 @types은 타입 어노테이션을 의미한다. 타입 정의 파일의 패키지 이름 형식에는 패키지명은 실제 구현 패키지명과 같다. 
 (@types/jquery가 타입 정의 파일 패키지명이라면 실제 구현 패키지명은 jquery가 된다.) 

    🔧 npm show @types/underscore versions    //버전 정보 출력
    🔧 npm install --save underscore@1.8.3    //언더스코어는 런 타임 때 의존성이 있으므로 --save 플래그를 추가해 설치를 진행한다.



💡 타입정의 파일 
타입 정의 파일은 타입이 없는 자바스크립트 라이브러리에 대한 타입 정보를 타입스크립트 컴파일러에 전달해 컴파일 수행을 돕는다.

타입 정의 파일을 이용하면 JS 라이브러리를 수정하지 않고 타입에 대한 메타 정보에 해당하는 타입 정의 파일만을 가별게 수정해줌으로써 타입스크립트용 
JS 라이브러리를 배포할 수 있어 유지보수 면에서 좋다. 

    🔧 tsc my.ts --outDir library 


    👏 라이브러리 호출 시 d.ts 파일 사용
    -> 타입 정의 파일(d.ts)은 타입이나 구조 정보가 정의되어 있지 않아 자바스크립트 파일을 타입스크립트 컴파일러가 이해할 수 있도록 관련 정보를 제공해 주는 역할을 한다.
    ( 이처럼 타입스크립트 프로젝트에서 타입 정의 파일을 추출하면 타입스크립트 파일은 외부로 노출하지 않고 컴파일 결과인 js 파일만 노출할 수 있는 이점이 생긴다.)
