📌타비 선언과 변경, 타입 호환
(타입 호환에 대해서는 크게 덕 타이핑, 구조 서브타이핑, 명목 타이핑으로 나뉜다.)

💡타입 에일리어스
: 타입 에일리어스는 타입스크립트 1.4 버전부터 지원된 특징이다.
타입 에일리어스를 이용하면 기존 타입에 새로운 이름을 지을 수 있다. 

" 타입 에일리어스는 단일 타입보다는 유니언 타입이나 리터럴 타입과 같은 다소 복잡한 타입에 적용하면 좋다."


    👏타입 에일리어스를 이용한 배열 타입 선언
    : 베열은 하나의 변수에 여러 값을 관리할 수 있는 효율적인 자료형이다.
    (배열에 입력되는 값은 대체로 같은 타입을 갖지만, 때로는 문자열 "true"와 불리언 "true"처럼 입력할 때 구분 하기가 모호한 경우가 있다.
    이러한 경우는 typeof를 이용해 문자인지 숫자인지 확인해서 받아야 한다.)


💡타입 캐스팅, 변환, 어설션
    👏 타입 캐스팅과 변환
    : 타입 캐스팅은 명시적으로 선언한 캐스팅 코드에 의한 타입 변경을 의미하며, JS 인터프리터에 의해 타입이 바뀌는 타입 변환과 구분됩니다. 

    기본 래퍼 객체 
    1) String
    2) Number
    3) Boolean
    4) Symbol

    
    👏 타입 어설션
    : 타입 어설션을 이용하면 타입스크립트 컴파일러가 타입 어설션 정보를 이용해 컴파일을 수행한다.
    (따라서 타입 어설션은 컴파일 과정까지만 유효하고 컴파일 후에는 사라진다.)


    👏 타입 호환
    : 자바스크립트 같은 동적 프로그래밍 언어는 런타임 시점에 동적 타입 검사를 수행하고, 타입 스크립트 같은 언어는 컴파일 시점에 정적 타입 검사를 수행한다.
    (자바스크립트가 런타임 시점에 동적 타입 검사를 수행하는 대표적인 예로 덕 타이핑이 있다. 덕 타이핑은 런타임 시에 동적으로 할당된 객체의 타입을 검사해 코드를 수행한다.)

    ✔타입스크립트는 두 부류의 타입 시스템을 모두 지원한다.
    - 구조 타입 시스템
    - 명목 타입 시스템 

    ✔타입스크립트의 네 부류 타이핑 방식 
    - 덕 타이핑 : 런타임 시 동적으로 타입의 구조가 정해지는 타입 지정 방식. 
    - 구조 타이핑 : 타입의 구조만 같다면 서로 호환 가능한 타입 지정 방식. 
    - 구조 서브타이핑 : 구조가 부분적으로 같더라도 타입 호환을 지원.
    - 명목 타이핑 



    👏 덕 타이핑 
    " 덕 타이핑을 할 때 타입 안전성을 강화하려면 인터페이스를 도입하면 된다."
    
    👏 구조 타이핑
    " 자바스크립트는 컴파일 시간에 타입 호환이 가능한지를 검사한다."
    - 타입 호환이 가능하면 컴파일을 통과시키고 타입 호환이 불가능하면 컴파일 오류를 출력한다.
    ( 이처럼 타입스크립트는 타입 안전성을 위해 컴파일 시간에 타입 검사를 수행한다.)
    [ 인터페이스와 클래스가 구조만 같다면 상호 구조 타이핑이 가능하다.]


    👏 구조 서브 타이핑
    : 구조 타이핑은 타입 구조가 같아야지만 타입 호환이 이뤄지지만, 구조 서브타이핑은 구조가 부분적으로 같더라도 타입 호환을 지원한다.

    