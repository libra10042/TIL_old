 📌클래스와 인터페이스
 📝인스턴스화란?
 객체의 참조가 객체 참조변수에 할당되는 과정을 인스턴스화(instaniate)라고 한다.

"클래스는 집의 설계 도면과 같고 설계 도면은 집이 된다.  객체는 메모리에 존재하는 실제 내용이다."



👏 타입스크립트의 객체지향 프로그래밍 
: 객체지향 프로그래밍(OOP : Object-Oriented Programming)은 애플리케이션을 개발할 때 중복을 획기적으로 줄일 수 있는 방법이다.


👏 인터페이스
: 자바스크립트(ES6)가 지원하지 않는 타입스크립트만의 특징이다. 인터페이스는 타입이며 컴파일 후에는 사라진다. 
(추상 클래스는 선언과 구현이 모두 존재하지만 인터페이스는 선언만 존재하며, 멤버 변수와 멤버 메서드를 선언할 수 있지만 
접근제한자는 설정할 수 없다.)
😍"다중상속이 가능하다."

interface Car { speed : number; }
interface SportCar { acceleration: number; }

interface MyOptimizedCar extends Car, SportCar {
    waterproof : boolean; 
}

let myCar = <MyOptimizedCar>{};
myCar.speed = 100; 
myCar.acceleration = 100; 
myCar.waterproof = true;



💡 인터페이스의 역할과 컴파일 결과 분석
js의 객체는 구조를 고정할 수 없고 쉽게 변화(flexible)하는 특성이 있다. 
객체는 유지보수와 확장 그리고 안전성을 고려해 선언과 동시에 고정할 필요가 있다. 인터페이스를 이용하면 객체의 구조를 고정할 수 있다. 
알아둘 점은 인터페이스는 컴파일 과정에서 타입 검사의 용도로 사용하고 컴파일 후에는 제거된다. 
따라서 typeof을 이용해 인터페이스의 타입을 조사할 수 없다. 


인터페이스는 타입 선언이 많아도 컴파일(es6) 후에는 모두 사라지므로 런타임 성능에 영향을 미치지 않는다.



✍오버라이딩으로 메서드 재정의하기
오버라이딩은 부모 클래스에 정의된 메서드를 자식 클래스에서 새로 구현하는 것을 일컫는 개념이다.
(여기서 오버라이딩할 대상이 있는 부모 클래스를 오버라이든 클래스라 한다.)





    💡다형성
    다형성은 "여러 모양"을 의미하는 그리스 단어이고 다형성에서 형은 타입을 의미한다. 프로그래밍 언어에서 다형성이란 여러 타입을 받아들임으로써 여러 형태를 가지는 것을 의미한다.
    
    "타입스크립트에서 살펴볼 수 있는 다형성의 예"
    1) 클래스 다형성 : 자식 클래스가 부모 클래스를 상속하고 있을 때 부모 클래스를 타입으로 가지는 객체 참조변수에 자식 클래스의 객체가 할당됨으로써 다형성을 지니게 된다.
    2) 인터페이스 다형성
    3) 매개변수의 다형성





