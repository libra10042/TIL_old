📌 타입스크립트 개요
- 타입스크립트는 자바스크릡트의 상위 집합으로서 ECMA스크립트의 최신 표준을 지원한다.

- ECMA스크립트의 최신 표준을 지원함으로써 하위 ECMA 표준에 대한 컴파일도 지원한다.


- 자바스크립트를 보완해 변수나 함수 등에 명시적으로 타입을 추가할 수 있게 해 타입 안전성을 높였다. 

- 이뿐만 아니라 모듈화 기능, 객체지향 프로그래밍 지원, 도구 지원도 있다. 


📌 타입스크립트의 특징.
- 정적 타입 언어는 컴파일 타임에 타입을 검사하는데 시간이 들지만 안전성을 보장한다.

- 동적 언어는 컴파일 하는데 시간이 들지 않고 동적 타이핑을 수행하기 때문에 런타임 시 속도 가 빠르다.
(자바스크립트는 안정성을 포기하고 속도를 택했다.)

- 타입스크립트는 컴파일 시간에 타입 검사를 수행함으로써 타입 안정성이 검증된 자바스크립트 코드를 생성한다.

- 타입스크립트는 단지 컴파일 단계까지만 사용하고 실행은 자바스크립트로 이뤄지므로 자바스크립트를 완전히 대체한다고 볼 수는 없으며 
자바스크립트를 보완하는 역할을 한다. 

                "타입스크립트 = 자바스크립트 + 타입"

                : 타입이란 무엇일까? 타입은 꽤 사소해 보이지만 타입스크립트에서 중요한 특징이다. 타입이 있음으로써 개발 변수나 함수에 타입         
                안정성을 더할 뿐 아니라. 대규모 프로젝트를 구성할 수 있는 밑바탕이 된다.
                (타입스크립트의 슬로건은 "Javascript that scales(확장된 자바스크립트)" 이다.)




        💡 application 개발을 하기 위해 필요한 조건
            - 모듈화 기능을 통해 모듈 간의 결합도를 줄일 수 있다. 
            - 객체지향 프로그래밍을 지원해 코드의 중복과 복잡도를 낮출 수 있다.
            - 코드 규모가 커지더라도 구조화를 갖춰 개발할 수 있다. 

        💡타입 스크립트는 다음과 같은 특성을 지원한다.
            - 모듈 시스템 : ES6모듈과 네임스페이스 지원
            - 클래스와 인터페이스 지원
            - 타입 시스템 지원

        --> 타입스크립트는 ES6의 클래스 뿐 아니라 인터페이스를 추가로 지원해 객체지향 프로그래밍을 더욱 완전하게 지원하고, 타입 시스템을 기반으로
            애플리케이션을 개발할수 있다.





📝 타입 시스템 지원
자바스크립트에서 타입을 지원하는 것은 규모 있는 애플리케이션을 더 견고하게 구축하는데 필수이다.
"타입스크립트에서 변수나 함수의 매개변수 등에 선언한 타입 어노테이션은 컴파일할 때 타입 검사를 위한 목적으로 사용한다."
(타입 검사를 통해 타입 안전성이 확보되면 타입스크립트 컴파일러가 타입 어노테이션을 제거하고 최종적으로 js 코드를 생성한다.)


"타입 스크립트는 컴파일 언어라고도 한다."
--> 이렇게 타입스크립트 외에도 컴파일 언어로는 다트(Dart), 커피스크립트(Coffescript), 클로저 스크립트(ClojureScript), 스크립트 샵(Scriptsharp), SaaS  등이 있다.



💡타입스크립트를 주력으로 채택한 언어.
- 앵귤러
- 아이오닉
- 네이티브스크립트
- 일렉트론
- 도조2



