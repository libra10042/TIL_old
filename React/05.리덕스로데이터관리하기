📌 리덕스
[리덕스의 데이터를 관리하는 객체도 스토어라고 한다.]
: 리덕스는 컨텍스트보다 조금 더 체계적으로 데이터를 관리한다.

💡 리덕스와 컨텍스트 중 무엇을 사용해야 할까?
- 서버에서 가져온 데이터를 이용하여 새로운 결과물을 만드는 경우 "리덕스를"
- 컴포넌트의 통합 데이터를 관리하는 경우 "컨텍스트"를 추천한다.


프로퍼티 : 상위 컴포넌트에서 하위 컴포넌트로 전달되는 읽기 전용 데이터 이다.
state : 컴포넌트의 state를 저장하고 변경할 수 있는 데이터이다.
컨텍스트 : 부모 컴포넌트에서 생성하여 모든 자식 컴포넌트에 전달하는 데이터이다.
리덕스 : 서버에서 받은 데이터를 앱 전체에 전달하거나 관리한다.



🏴󠁧󠁢󠁥󠁮󠁧󠁿리덕스 설치하기
yarn add redux react-redux      : 리덕스를 설치하는 이유는 리덕스는 데이터 저장 및 처리 방법만을 구현한 독립된 라이브러리이기 때문.
                                  ( react-redux가 필요)


리덕스 크롬 확장 도구 설치      : chrome 웹 스토어에서 'Redux DevTools' 설치

yarn add rudux-devtools-extension --dev    : 리덕스를 활용한 코드와 리덕스 크롬 확장 도구를 연동할 수 있도록 리덕스 개발자 확장 라이브러리 설치. 


createStore(reducer, /* initial state */, /*enhancer */) : 리덕스로 빈 스토어 생성하기
                                        (createStore() 함수는 리듀서, 스토어 데이터의 초기값, 미들웨어 함수를 인자로 받는다. state와 미드루에어는 생략해도 스토어가 생성된다.)




                                 
💡 리듀서란 
"리듀서"라는 이름은 02장에서 배운 '배열 함수' 중 reduce()에서 따온 것이다. reduce() 함수가 배열의 값을 특정 데이터로 변환하는 것처럼, 리듀서는 변환 함수 배열을 최종 스토어 데이터로 변환한다.

"리듀서는 스토어의 데이터(state)와 액션을 인자로 받아 새로운 스토어의 데이터를 반환한다."
