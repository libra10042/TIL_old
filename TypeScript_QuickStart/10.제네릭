📌 제네릭
: 함수나 클래스를 선언할 떄 타입을 고정하지 않고, 사용 때 명시해 타입을 더 유연하게 사용할 수 있다. 

💡 any로 타입 느슨하게 만들기 
- 만약 제네릭이 없다면 코드를 유연하게 만들기 위해 any 와 같은 상위 타입을 선언해야 한다.
( any 타입은 유연하지만, 특정 타입으로 강제하지 않아 타입 안전성이 떨어진다. )


💡 제네릭
- 클래스와 함수에 타입이 고정되는 것을 방지하고 재사용할 수 있는 요소를 선언할 수 있게 한다.
(타입스크립트 0.9부터 지원)

        장점
        - 제네릭 타입 검사를 컴파일 시간에 진행해 타입 안전성을 보장한다.
        - 캐스팅과 관련한 코드를 제거할 수 있다. 
        - 제네릭을 이용하면 제네릭 로직을 이용해 재사용이 가능한 코드를 만들 수 있다. 